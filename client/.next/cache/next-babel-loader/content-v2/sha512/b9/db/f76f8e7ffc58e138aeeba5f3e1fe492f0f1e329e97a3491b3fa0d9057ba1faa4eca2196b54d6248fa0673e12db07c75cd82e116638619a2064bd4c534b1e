{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/domains/Auth/components/SignInPage/SignInPage.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport useSignInPageStyle from \"./useSignInPageStyle\";\nimport { Grid, Typography, useTheme } from \"@material-ui/core\";\nimport { useIntl } from \"react-intl\";\nimport SignInPageMessages from \"./SignInPage.messages\";\nimport GolButton from \"components/GolButton\";\nimport GolTextField from \"components/GolTextField\";\nimport { ReactComponent as EmailIcon } from \"assets/images/icons/Commiunication/Email.svg\";\nimport { ReactComponent as LockIcon } from \"assets/images/icons/Security/Lock.svg\";\nimport { useRouter } from \"next/router\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { ReactComponent as VisibleIcon } from \"assets/images/icons/Security/visible.svg\";\nimport { ReactComponent as InvisibleIcon } from \"assets/images/icons/Security/invisible.svg\";\nimport BabyPng from \"assets/images/pictures/baby.jpg\";\nimport AuthLayout from \"domains/Auth/components/AuthLayout\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\n\nconst SignInPage = () => {\n  const classes = useSignInPageStyle();\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false\n  });\n  const [loginData, setLoginData] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const {\n    formatMessage\n  } = useIntl();\n  const {\n    locale,\n    asPath,\n    push\n  } = useRouter();\n\n  const handleClickShowPassword = () => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const theme = useTheme();\n\n  const onSubmit = () => {\n    let {\n      email,\n      password\n    } = loginData;\n    axios.post(`${api}/api/user/login`, {\n      data: {\n        email,\n        password\n      }\n    }).then(res => console.log(res)).catch(err => {\n      setLoading(true);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    authBG: BabyPng,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.subTitle,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: formatMessage(SignInPageMessages.subTitle)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: formatMessage(SignInPageMessages.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.userNameWrapper,\n        children: /*#__PURE__*/_jsxDEV(GolTextField, {\n          label: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.textFieldLabel,\n            children: [/*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatMessage(SignInPageMessages.emailInput)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this),\n          value: loginData === null || loginData === void 0 ? void 0 : loginData.email,\n          onChange: e => setLoginData(_objectSpread(_objectSpread({}, loginData), {}, {\n            email: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.passwordWrapper,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: classes.passLabel,\n            htmlFor: \"outlined-adornment-password\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.textFieldLabel,\n              children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatMessage(SignInPageMessages.passInput)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? \"text\" : \"password\",\n            value: loginData === null || loginData === void 0 ? void 0 : loginData.password,\n            onChange: e => setLoginData(_objectSpread(_objectSpread({}, loginData), {}, {\n              password: e.target.value\n            })),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(InvisibleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this),\n            labelWidth: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(GolButton, {\n        disabled: loading ? true : false,\n        onClick: onSubmit,\n        fullWidth: true,\n        style: {\n          width: \"100%\"\n        },\n        children: loading ? \"loading...\" : formatMessage(SignInPageMessages.signIn)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.noHaveAccount,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          onClick: () => push(\"/signUp\"),\n          variant: \"subtitle2\",\n          component: \"a\",\n          className: classes.noHaveAccount,\n          children: [formatMessage(SignInPageMessages.notHaveAccount), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: theme.palette.primary[700],\n              cursor: \"pointer\"\n            },\n            onClick: () => push(\"/signUp\"),\n            children: formatMessage(SignInPageMessages.signUp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignInPage;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/domains/Auth/components/SignInPage/SignInPage.tsx"],"names":["React","useSignInPageStyle","Grid","Typography","useTheme","useIntl","SignInPageMessages","GolButton","GolTextField","ReactComponent","EmailIcon","LockIcon","useRouter","OutlinedInput","InputLabel","InputAdornment","FormControl","IconButton","VisibleIcon","InvisibleIcon","BabyPng","AuthLayout","axios","api","SignInPage","classes","values","setValues","useState","password","showPassword","loginData","setLoginData","email","loading","setLoading","formatMessage","locale","asPath","push","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","theme","onSubmit","post","data","then","res","console","log","catch","err","subTitle","title","userNameWrapper","textFieldLabel","emailInput","e","target","value","passwordWrapper","passLabel","passInput","width","signIn","noHaveAccount","notHaveAccount","color","palette","primary","cursor","signUp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useSignInPageStyle from \"./useSignInPageStyle\";\nimport { Grid, Typography, useTheme } from \"@material-ui/core\";\nimport { useIntl } from \"react-intl\";\nimport SignInPageMessages from \"./SignInPage.messages\";\nimport GolButton from \"components/GolButton\";\nimport GolTextField from \"components/GolTextField\";\nimport { ReactComponent as EmailIcon } from \"assets/images/icons/Commiunication/Email.svg\";\nimport { ReactComponent as LockIcon } from \"assets/images/icons/Security/Lock.svg\";\nimport { useRouter } from \"next/router\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { ReactComponent as VisibleIcon } from \"assets/images/icons/Security/visible.svg\";\nimport { ReactComponent as InvisibleIcon } from \"assets/images/icons/Security/invisible.svg\";\nimport BabyPng from \"assets/images/pictures/baby.jpg\";\nimport GoogleSvg from \"assets/images/icons/Logo/Google.png\";\nimport AuthLayout from \"domains/Auth/components/AuthLayout\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\n\nconst SignInPage = () => {\n  const classes = useSignInPageStyle();\n\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false,\n  });\n\n  const [loginData, setLoginData] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n  const { formatMessage } = useIntl();\n\n  const { locale, asPath, push } = useRouter();\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const theme = useTheme();\n\n  const onSubmit = () => {\n    let { email, password } = loginData;\n    axios\n      .post(`${api}/api/user/login`, {\n        data: {\n          email,\n          password,\n        },\n      })\n      .then((res) => console.log(res))\n      .catch((err) => {\n        setLoading(true);\n        console.log(err);\n      });\n  };\n\n  return (\n    <AuthLayout authBG={BabyPng}>\n      <Grid item xs={12}>\n        <div className={classes.subTitle}>\n          <Typography variant=\"caption\">\n            {formatMessage(SignInPageMessages.subTitle)}\n          </Typography>\n        </div>\n        <div className={classes.title}>\n          <Typography variant=\"h3\">\n            {formatMessage(SignInPageMessages.title)}\n          </Typography>\n        </div>\n        <div className={classes.userNameWrapper}>\n          <GolTextField\n            label={\n              <span className={classes.textFieldLabel}>\n                <EmailIcon />\n                <span>{formatMessage(SignInPageMessages.emailInput)}</span>\n              </span>\n            }\n            value={loginData?.email}\n            onChange={(e) =>\n              setLoginData({ ...loginData, email: e.target.value })\n            }\n          />\n        </div>\n        <div className={classes.passwordWrapper}>\n          <FormControl variant=\"outlined\">\n            <InputLabel\n              className={classes.passLabel}\n              htmlFor=\"outlined-adornment-password\"\n            >\n              <span className={classes.textFieldLabel}>\n                <LockIcon />\n                <span>{formatMessage(SignInPageMessages.passInput)}</span>\n              </span>\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword ? \"text\" : \"password\"}\n              value={loginData?.password}\n              onChange={(e) =>\n                setLoginData({ ...loginData, password: e.target.value })\n              }\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <VisibleIcon /> : <InvisibleIcon />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n        </div>\n      </Grid>\n      <Grid item xs={12}>\n        <GolButton\n          disabled={loading ? true : false}\n          onClick={onSubmit}\n          fullWidth\n          style={{ width: \"100%\" }}\n        >\n          {loading ? \"loading...\" : formatMessage(SignInPageMessages.signIn)}\n        </GolButton>\n      </Grid>\n      <Grid item xs={12} className={classes.noHaveAccount}>\n        <div>\n          <Typography\n            onClick={() => push(\"/signUp\")}\n            variant=\"subtitle2\"\n            component=\"a\"\n            className={classes.noHaveAccount}\n          >\n            {formatMessage(SignInPageMessages.notHaveAccount)}\n            <span\n              style={{\n                color: theme.palette.primary[700],\n                cursor: \"pointer\",\n              }}\n              onClick={() => push(\"/signUp\")}\n            >\n              {formatMessage(SignInPageMessages.signUp)}\n            </span>\n          </Typography>\n        </div>\n      </Grid>\n    </AuthLayout>\n  );\n};\n\nexport default SignInPage;\n"]},"metadata":{},"sourceType":"module"}