{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolTextField.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ButtonBase, TextField } from \"@material-ui/core\";\nimport { isNil } from \"ramda\";\nimport React, { useMemo } from \"react\";\nimport GolFormatInputBase from \"./GolFormatInputBase\";\nimport GolInputBase from \"./GolInputBase\";\nimport useStyle from \"./GolTextField.style\";\nimport { ReactComponent as ClearIcon } from 'assets/images/icons/UI/CloseCircle.svg';\n\nconst GolTextField = (_ref) => {\n  let {\n    label,\n    helperText: helper,\n    error,\n    maxLength,\n    rightPrefix,\n    leftPrefix,\n    maskOptions,\n    InputProps: InputProperties,\n    inputProps: inputProperties,\n    className,\n    onClear,\n    value,\n    disabled\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"label\", \"helperText\", \"error\", \"maxLength\", \"rightPrefix\", \"leftPrefix\", \"maskOptions\", \"InputProps\", \"inputProps\", \"className\", \"onClear\", \"value\", \"disabled\"]);\n\n  const styles = useStyle();\n  const valueLength = `${value}`.length;\n  const helperText = useMemo(() => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: error ? error : helper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), maxLength && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [value ? valueLength : 0, \"/\", maxLength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true), [error, helper, maxLength, value, valueLength]);\n\n  const InputProps = _objectSpread({\n    inputComponent: maskOptions ? GolFormatInputBase : GolInputBase,\n    endAdornment: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endAdornmentContainer\",\n      children: [disabled || valueLength === 0 || isNil(onClear) ? null : /*#__PURE__*/_jsxDEV(ButtonBase, {\n        className: \"endAdornmentElement\",\n        onClick: onClear,\n        children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), rightPrefix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this),\n    startAdornment: leftPrefix && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GolTextFieldLeftPrefix\",\n      children: leftPrefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, InputProperties);\n\n  const inputProps = _objectSpread({\n    options: maskOptions\n  }, inputProperties);\n\n  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n    InputLabelProps: {\n      className: styles.label\n    },\n    variant: \"outlined\"\n  }, _objectSpread({\n    helperText,\n    label,\n    error: !!error,\n    value,\n    InputProps,\n    inputProps,\n    disabled,\n    className\n  }, other)), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\nGolTextField.displayName = \"GolTextField\";\nexport default GolTextField;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolTextField.tsx"],"names":["ButtonBase","TextField","isNil","React","useMemo","GolFormatInputBase","GolInputBase","useStyle","ReactComponent","ClearIcon","GolTextField","label","helperText","helper","error","maxLength","rightPrefix","leftPrefix","maskOptions","InputProps","InputProperties","inputProps","inputProperties","className","onClear","value","disabled","other","styles","valueLength","length","inputComponent","endAdornment","startAdornment","options","displayName"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsD,mBAAtD;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,KAAP,IAA+BC,OAA/B,QAA8C,OAA9C;AACA,OAAOC,kBAAP,MAEO,sBAFP;AAGA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,cAAc,IAAIC,SAA1B,QAA2C,wCAA3C;;AAYA,MAAMC,YAA+B,GAAG,UAelC;AAAA,MAfmC;AACvCC,IAAAA,KADuC;AAEvCC,IAAAA,UAAU,EAAEC,MAF2B;AAGvCC,IAAAA,KAHuC;AAIvCC,IAAAA,SAJuC;AAKvCC,IAAAA,WALuC;AAMvCC,IAAAA,UANuC;AAOvCC,IAAAA,WAPuC;AAQvCC,IAAAA,UAAU,EAAEC,eAR2B;AASvCC,IAAAA,UAAU,EAAEC,eAT2B;AAUvCC,IAAAA,SAVuC;AAWvCC,IAAAA,OAXuC;AAYvCC,IAAAA,KAZuC;AAavCC,IAAAA;AAbuC,GAenC;AAAA,MADDC,KACC;;AACJ,QAAMC,MAAM,GAAGrB,QAAQ,EAAvB;AAEA,QAAMsB,WAAW,GAAI,GAAEJ,KAAM,EAAT,CAAWK,MAA/B;AACA,QAAMlB,UAAU,GAAGR,OAAO,CACxB,mBACE;AAAA,4BACE;AAAA,gBAAOU,KAAK,GAAGA,KAAH,GAAWD;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,SAAS,iBACR;AAAA,iBACGU,KAAK,GAAGI,WAAH,GAAiB,CADzB,OAC6Bd,SAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBAFsB,EAWxB,CAACD,KAAD,EAAQD,MAAR,EAAgBE,SAAhB,EAA2BU,KAA3B,EAAkCI,WAAlC,CAXwB,CAA1B;;AAaA,QAAMV,UAAU;AACdY,IAAAA,cAAc,EAAEb,WAAW,GAAGb,kBAAH,GAAwBC,YADrC;AAEd0B,IAAAA,YAAY,eACV;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,iBACGN,QAAQ,IAAIG,WAAW,KAAK,CAA5B,IAAiC3B,KAAK,CAACsB,OAAD,CAAtC,GAAkD,IAAlD,gBACC,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,qBAAtB;AAA4C,QAAA,OAAO,EAAEA,OAArD;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGR,WANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHY;AAYdiB,IAAAA,cAAc,EAAEhB,UAAU,iBACxB;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA;AAbY,KAeXG,eAfW,CAAhB;;AAiBA,QAAMC,UAAU;AACda,IAAAA,OAAO,EAAEhB;AADK,KAEXI,eAFW,CAAhB;;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,eAAe,EAAE;AACfC,MAAAA,SAAS,EAAEK,MAAM,CAACjB;AADH,KADnB;AAIE,IAAA,OAAO,EAAC;AAJV;AAMIC,IAAAA,UANJ;AAOID,IAAAA,KAPJ;AAQIG,IAAAA,KAAK,EAAE,CAAC,CAACA,KARb;AASIW,IAAAA,KATJ;AAUIN,IAAAA,UAVJ;AAWIE,IAAAA,UAXJ;AAYIK,IAAAA,QAZJ;AAaIH,IAAAA;AAbJ,KAcQI,KAdR;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxED;;AA0EAjB,YAAY,CAACyB,WAAb,GAA2B,cAA3B;AACA,eAAezB,YAAf","sourcesContent":["import { ButtonBase, TextField, TextFieldProps } from \"@material-ui/core\";\nimport { isNil } from \"ramda\";\nimport React, { FC, ReactNode, useMemo } from \"react\";\nimport GolFormatInputBase, {\n  IGolFormatInputBaseOptions,\n} from \"./GolFormatInputBase\";\nimport GolInputBase from \"./GolInputBase\";\nimport useStyle from \"./GolTextField.style\";\nimport {ReactComponent as ClearIcon } from 'assets/images/icons/UI/CloseCircle.svg'\n\nexport interface IGolTextField extends Omit<TextFieldProps, \"error\" | \"type\"> {\n  type?: HTMLInputType;\n  error?: ReactNode;\n  maxLength?: number;\n  rightPrefix?: ReactNode | Element;\n  leftPrefix?: ReactNode | Element;\n  maskOptions?: IGolFormatInputBaseOptions;\n  onClear?: () => void;\n}\n\nconst GolTextField: FC<IGolTextField> = ({\n  label,\n  helperText: helper,\n  error,\n  maxLength,\n  rightPrefix,\n  leftPrefix,\n  maskOptions,\n  InputProps: InputProperties,\n  inputProps: inputProperties,\n  className,\n  onClear,\n  value,\n  disabled,\n  ...other\n}) => {\n  const styles = useStyle();\n\n  const valueLength = `${value}`.length;\n  const helperText = useMemo(\n    () => (\n      <>\n        <span>{error ? error : helper}</span>\n        {maxLength && (\n          <span>\n            {value ? valueLength : 0}/{maxLength}\n          </span>\n        )}\n      </>\n    ),\n    [error, helper, maxLength, value, valueLength]\n  );\n  const InputProps = {\n    inputComponent: maskOptions ? GolFormatInputBase : GolInputBase,\n    endAdornment: (\n      <div className=\"endAdornmentContainer\">\n        {disabled || valueLength === 0 || isNil(onClear) ? null : (\n          <ButtonBase className=\"endAdornmentElement\" onClick={onClear}>\n            <ClearIcon />\n          </ButtonBase>\n        )}\n        {rightPrefix}\n      </div>\n    ),\n    startAdornment: leftPrefix && (\n      <div className=\"GolTextFieldLeftPrefix\">{leftPrefix}</div>\n    ),\n    ...InputProperties,\n  };\n  const inputProps = {\n    options: maskOptions,\n    ...inputProperties,\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        className: styles.label,\n      }}\n      variant=\"outlined\"\n      {...{\n        helperText,\n        label,\n        error: !!error,\n        value,\n        InputProps,\n        inputProps,\n        disabled,\n        className,\n        ...(other as any),\n      }}\n    />\n  );\n};\n\nGolTextField.displayName = \"GolTextField\";\nexport default GolTextField;\n"]},"metadata":{},"sourceType":"module"}