{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/domains/Products/components/AddProduct.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\n\nconst AddProduct = () => {\n  var _product$images, _product$images2, _product$categories, _product$sizes, _product$sizes2;\n\n  const {\n    0: product,\n    1: setProduct\n  } = useState({\n    name: \"\",\n    price: null,\n    discount: null,\n    images: [],\n    stock: null,\n    categories: [],\n    sizes: []\n  });\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: size,\n    1: setSize\n  } = useState(\"\");\n  const {\n    0: sizePrice,\n    1: setSizePrice\n  } = useState(\"\");\n  let {\n    push\n  } = useRouter();\n  useEffect(() => {\n    axios.get(`${api}/api/category`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.token\n      }\n    }).then(res => setCategories(res === null || res === void 0 ? void 0 : res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          value: product === null || product === void 0 ? void 0 : product.name,\n          onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n            name: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          value: product === null || product === void 0 ? void 0 : product.price,\n          onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n            price: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          value: product === null || product === void 0 ? void 0 : product.discount,\n          onChange: e => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n            discount: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Product Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: product !== null && product !== void 0 && (_product$images = product.images) !== null && _product$images !== void 0 && _product$images.length ? product === null || product === void 0 ? void 0 : (_product$images2 = product.images) === null || _product$images2 === void 0 ? void 0 : _product$images2.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                padding: 10\n              },\n              width: 200 // src={`${api}/uploads/admin/product/${product?._id}/${el}`}\n              ,\n              alt: product === null || product === void 0 ? void 0 : product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)) : \"No Photos Added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: product === null || product === void 0 ? void 0 : (_product$categories = product.categories) === null || _product$categories === void 0 ? void 0 : _product$categories.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: el === null || el === void 0 ? void 0 : el.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: categories,\n            getOptionLabel: option => option.name,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this),\n            onChange: (e, data) => {\n              setCategory(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            onClick: () => setProduct(_objectSpread(_objectSpread({}, product), {}, {\n              categories: [...product.categories, category]\n            })),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"In Stock:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"number\",\n          value: product === null || product === void 0 ? void 0 : product.stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sizes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: product !== null && product !== void 0 && (_product$sizes = product.sizes) !== null && _product$sizes !== void 0 && _product$sizes.length ? product === null || product === void 0 ? void 0 : (_product$sizes2 = product.sizes) === null || _product$sizes2 === void 0 ? void 0 : _product$sizes2.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [el === null || el === void 0 ? void 0 : el.size, \" - \", el === null || el === void 0 ? void 0 : el.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this)) : \"No Sizes Added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: [\"XXS\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n            getOptionLabel: option => option,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this),\n            onChange: (e, data) => {\n              setSize(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            type: \"text\",\n            label: \"Price\",\n            onChange: e => setSizePrice(e.target.value),\n            value: sizePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            onClick: () => {\n              setProduct(_objectSpread(_objectSpread({}, product), {}, {\n                sizes: [...product.sizes, {\n                  size,\n                  price: sizePrice\n                }]\n              }));\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        variant: \"outlined\",\n        onClick: () => {\n          push(\"/products\");\n        },\n        size: \"large\",\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AddProduct;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/domains/Products/components/AddProduct.tsx"],"names":["Button","TextField","Autocomplete","axios","api","useRouter","React","useEffect","useState","AddProduct","product","setProduct","name","price","discount","images","stock","categories","sizes","setCategories","category","setCategory","size","setSize","sizePrice","setSizePrice","push","get","headers","localStorage","token","then","res","data","catch","err","console","log","e","target","value","length","map","el","display","padding","option","params"],"mappings":"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","sourcesContent":["import { Button, FormHelperText, TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\n\nconst AddProduct = () => {\n  const [product, setProduct] = useState({\n    name: \"\",\n    price: null,\n    discount: null,\n    images: [],\n    stock: null,\n    categories: [],\n    sizes: [],\n  });\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [sizePrice, setSizePrice] = useState(\"\");\n  let { push } = useRouter();\n\n  useEffect(() => {\n    axios\n      .get(`${api}/api/category`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.token,\n        },\n      })\n      .then((res) => setCategories(res?.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <div>\n          <h3>Product Name</h3>\n        </div>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            type=\"text\"\n            value={product?.name}\n            onChange={(e) => setProduct({ ...product, name: e.target.value })}\n          />\n        </div>\n      </div>\n      <br />\n      <div>\n        <div>\n          <h3>Product Price</h3>\n        </div>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            type=\"text\"\n            value={product?.price}\n            onChange={(e) => setProduct({ ...product, price: e.target.value })}\n          />\n        </div>\n        <br />\n      </div>\n      <div>\n        <div>\n          <h3>New Price</h3>\n        </div>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            type=\"text\"\n            value={product?.discount}\n            onChange={(e) =>\n              setProduct({ ...product, discount: e.target.value })\n            }\n          />\n        </div>\n      </div>\n      <br />\n      <div>\n        <div>\n          <h3>Product Images</h3>\n        </div>\n        <div>\n          <ul>\n            {product?.images?.length\n              ? product?.images?.map((el) => (\n                  <li style={{ display: \"inline-block\" }}>\n                    <img\n                      style={{ padding: 10 }}\n                      width={200}\n                      // src={`${api}/uploads/admin/product/${product?._id}/${el}`}\n                      alt={product?.name}\n                    />\n                  </li>\n                ))\n              : \"No Photos Added\"}\n          </ul>\n        </div>\n      </div>\n      <br />\n      {/* categories */}\n      <div>\n        <div>\n          <h3>Categories</h3>\n        </div>\n        <div>\n          <ul>\n            {product?.categories?.map((el) => (\n              <li>{el?.name}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <div>\n            <Autocomplete\n              fullWidth\n              options={categories}\n              getOptionLabel={(option) => option.name}\n              renderInput={(params) => (\n                <TextField {...params} variant=\"outlined\" />\n              )}\n              onChange={(e, data) => {\n                setCategory(data);\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() =>\n                setProduct({\n                  ...product,\n                  categories: [...product.categories, category],\n                })\n              }\n            >\n              Add\n            </Button>\n          </div>\n        </div>\n      </div>\n      <br />\n      {/* stock */}\n      <div>\n        <div>\n          <h3>In Stock:</h3>\n        </div>\n        <div>\n          <TextField variant=\"outlined\" type=\"number\" value={product?.stock} />\n        </div>\n      </div>\n      <br />\n      {/* size */}\n      <div>\n        <div>\n          <h3>Sizes:</h3>\n        </div>\n        <div>\n          <ul>\n            {product?.sizes?.length\n              ? product?.sizes?.map((el) => (\n                  <li>\n                    {el?.size} - {el?.price}\n                  </li>\n                ))\n              : \"No Sizes Added\"}\n          </ul>\n        </div>\n        <div>\n          <div>\n            <Autocomplete\n              fullWidth\n              options={[\"XXS\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"]}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField {...params} variant=\"outlined\" />\n              )}\n              onChange={(e, data) => {\n                setSize(data);\n              }}\n            />\n          </div>\n          <div>\n            <TextField\n              variant=\"outlined\"\n              type=\"text\"\n              label=\"Price\"\n              onChange={(e) => setSizePrice(e.target.value)}\n              value={sizePrice}\n            />\n          </div>\n          <div>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => {\n                setProduct({\n                  ...product,\n                  sizes: [...product.sizes, { size, price: sizePrice }],\n                });\n              }}\n            >\n              Add\n            </Button>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div>\n        <Button\n          fullWidth\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            push(\"/products\");\n          }}\n          size=\"large\"\n        >\n          Create Product\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}