{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/components/GolButton/GolButton.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { forwardRef } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport cs from \"classnames\";\nimport useStyle from \"./GolButton.style\";\nvar GolButton = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var variant = _ref.variant,\n      hasNeutral = _ref.hasNeutral,\n      ripple = _ref.ripple,\n      color = _ref.color,\n      children = _ref.children,\n      className = _ref.className,\n      classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"variant\", \"hasNeutral\", \"ripple\", \"color\", \"children\", \"className\", \"classes\"]);\n\n  var styles = useStyle({\n    variant: variant,\n    ripple: ripple,\n    classes: classes\n  });\n  var isNeutral = !!hasNeutral && !!variant;\n  var neutralClassName = styles[\"\".concat(variant, \"Neutral\")];\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref,\n    className: cs(className, _defineProperty({}, neutralClassName, isNeutral)),\n    color: hasNeutral ? undefined : color\n  }, {\n    classes: {\n      root: styles.root,\n      containedSecondary: styles.containedSecondary,\n      outlinedSecondary: styles.outlinedSecondary,\n      textSecondary: styles.textSecondary,\n      containedPrimary: styles.containedPrimary,\n      outlinedPrimary: styles.outlinedPrimary,\n      textPrimary: styles.textPrimary\n    },\n    variant: variant\n  }), props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, _this);\n}, \"gatymuhct+H6FkYI4kUzc3y9am4=\", false, function () {\n  return [useStyle];\n}));\n_c2 = GolButton;\nGolButton.displayName = \"GolButton\";\nGolButton.defaultProps = {\n  variant: \"contained\",\n  color: \"primary\",\n  ripple: \"animated\"\n};\nexport default GolButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GolButton$forwardRef\");\n$RefreshReg$(_c2, \"GolButton\");","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/components/GolButton/GolButton.tsx"],"names":["React","forwardRef","Button","cs","useStyle","GolButton","ref","variant","hasNeutral","ripple","color","children","className","classes","props","styles","isNeutral","neutralClassName","undefined","root","containedSecondary","outlinedSecondary","textSecondary","containedPrimary","outlinedPrimary","textPrimary","displayName","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAoC,mBAApC;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAoBA,IAAMC,SAAS,gBAAGJ,UAAU,SAC1B,gBAWEK,GAXF,EAYK;AAAA;;AAAA,MAVDC,OAUC,QAVDA,OAUC;AAAA,MATDC,UASC,QATDA,UASC;AAAA,MARDC,MAQC,QARDA,MAQC;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHEC,KAGF;;AACH,MAAMC,MAAM,GAAGX,QAAQ,CAAC;AAAEG,IAAAA,OAAO,EAAPA,OAAF;AAAWE,IAAAA,MAAM,EAANA,MAAX;AAAmBI,IAAAA,OAAO,EAAPA;AAAnB,GAAD,CAAvB;AACA,MAAMG,SAAS,GAAG,CAAC,CAACR,UAAF,IAAgB,CAAC,CAACD,OAApC;AACA,MAAMU,gBAAgB,GAAGF,MAAM,WAAIR,OAAJ,aAA/B;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,SAAS,EAAEH,EAAE,CAACS,SAAD,sBACVK,gBADU,EACSD,SADT,EAFf;AAKE,IAAA,KAAK,EAAER,UAAU,GAAGU,SAAH,GAAeR;AALlC,KAMM;AACFG,IAAAA,OAAO,EAAE;AACPM,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IADN;AAEPC,MAAAA,kBAAkB,EAAEL,MAAM,CAACK,kBAFpB;AAGPC,MAAAA,iBAAiB,EAAEN,MAAM,CAACM,iBAHnB;AAIPC,MAAAA,aAAa,EAAEP,MAAM,CAACO,aAJf;AAKPC,MAAAA,gBAAgB,EAAER,MAAM,CAACQ,gBALlB;AAMPC,MAAAA,eAAe,EAAET,MAAM,CAACS,eANjB;AAOPC,MAAAA,WAAW,EAAEV,MAAM,CAACU;AAPb,KADP;AAUFlB,IAAAA,OAAO,EAAPA;AAVE,GANN,GAkBMO,KAlBN;AAAA,cAoBGH;AApBH;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA1CyB;AAAA,UAcTP,QAdS;AAAA,GAA5B;MAAMC,S;AA6CNA,SAAS,CAACqB,WAAV,GAAwB,WAAxB;AACArB,SAAS,CAACsB,YAAV,GAAyB;AACvBpB,EAAAA,OAAO,EAAE,WADc;AAEvBG,EAAAA,KAAK,EAAE,SAFgB;AAGvBD,EAAAA,MAAM,EAAE;AAHe,CAAzB;AAMA,eAAeJ,SAAf","sourcesContent":["import React, { ReactNode, forwardRef } from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport cs from \"classnames\";\n\nimport useStyle from \"./GolButton.style\";\n\nexport type IGolButtonVariant = \"text\" | \"outlined\" | \"contained\";\nexport type IGolButtonColor = \"primary\" | \"secondary\" | \"default\" | \"inherit\";\nexport type IGolButtonRipple = \"animated\" | \"simple\";\nexport interface IGolButtonProps extends ButtonProps {\n  variant?: IGolButtonVariant;\n  color?: IGolButtonColor;\n  disabled?: boolean;\n  endIcon?: ReactNode;\n  startIcon?: ReactNode;\n  children?: ReactNode;\n  disableRipple?: boolean;\n  className?: string;\n  ripple?: IGolButtonRipple;\n  hasNeutral?: boolean;\n  style?: Record<string, unknown>;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst GolButton = forwardRef<any, IGolButtonProps>(\n  (\n    {\n      variant,\n      hasNeutral,\n      ripple,\n      color,\n      children,\n      className,\n      classes,\n      ...props\n    },\n    ref\n  ) => {\n    const styles = useStyle({ variant, ripple, classes });\n    const isNeutral = !!hasNeutral && !!variant;\n    const neutralClassName = styles[`${variant}Neutral`];\n\n    return (\n      <Button\n        ref={ref}\n        className={cs(className, {\n          [neutralClassName]: isNeutral,\n        })}\n        color={hasNeutral ? undefined : color}\n        {...{\n          classes: {\n            root: styles.root,\n            containedSecondary: styles.containedSecondary,\n            outlinedSecondary: styles.outlinedSecondary,\n            textSecondary: styles.textSecondary,\n            containedPrimary: styles.containedPrimary,\n            outlinedPrimary: styles.outlinedPrimary,\n            textPrimary: styles.textPrimary,\n          },\n          variant,\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n\nGolButton.displayName = \"GolButton\";\nGolButton.defaultProps = {\n  variant: \"contained\",\n  color: \"primary\",\n  ripple: \"animated\",\n};\n\nexport default GolButton;\n"]},"metadata":{},"sourceType":"module"}