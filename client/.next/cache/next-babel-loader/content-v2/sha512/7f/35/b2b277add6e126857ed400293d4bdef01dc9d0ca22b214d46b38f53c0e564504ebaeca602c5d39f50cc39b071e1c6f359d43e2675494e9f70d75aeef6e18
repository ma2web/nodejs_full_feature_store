{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport React, { useCallback, useContext, useEffect, useReducer } from \"react\";\nimport RtlSupportProvider from \"./RtlSupportProvider\";\nimport baseTheme, { ltrThemeDark, ltrThemeLight, rtlThemeDark, rtlThemeLight } from \"./theme\";\nvar CHANGE_DIR = \"CHANGE_DIR\";\nvar CHANGE_PALETTE = \"CHANGE_PALETTE\";\nvar ThemeContext = /*#__PURE__*/React.createContext({});\n\nvar GolThemeProvider = function GolThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(function (theme, action) {\n    switch (action.type) {\n      case CHANGE_DIR:\n        return _objectSpread(_objectSpread({}, theme), {}, {\n          direction: action.payload || theme.direction\n        });\n\n      case CHANGE_PALETTE:\n        return _objectSpread(_objectSpread({}, theme), {}, {\n          palette: action.payload\n        });\n\n      default:\n        return theme;\n    }\n  }, baseTheme),\n      _useReducer$ = _useReducer[0],\n      direction = _useReducer$.direction,\n      palette = _useReducer$.palette,\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    document.body.setAttribute(\"dir\", direction);\n\n    if (direction === \"rtl\") {\n      document.querySelector(\"html\").style.fontFamily = \"Peyda\";\n    } else {\n      document.querySelector(\"html\").style.fontFamily = \"Roboto\";\n    }\n  }, [direction]);\n  var themeNamesDictionary = {\n    ltrThemeLight: ltrThemeLight,\n    rtlThemeDark: rtlThemeDark,\n    ltrThemeDark: ltrThemeDark,\n    rtlThemeLight: rtlThemeLight\n  };\n  var theme = themeNamesDictionary[\"\".concat(direction, \"Theme\").concat(palette.length ? palette : \"Light\")];\n  return /*#__PURE__*/_jsx(RtlSupportProvider, {\n    children: /*#__PURE__*/_jsx(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsx(ThemeContext.Provider, {\n        value: dispatch,\n        children: children\n      })\n    })\n  });\n};\n\nexport default GolThemeProvider;\nexport var useChangeDirection = function useChangeDirection() {\n  var dispatch = useContext(ThemeContext);\n  return useCallback(function (dir) {\n    return dispatch({\n      type: CHANGE_DIR,\n      payload: dir\n    });\n  }, [dispatch]);\n};\nexport var useChangePalette = function useChangePalette() {\n  var dispatch = useContext(ThemeContext);\n  return useCallback(function (pal) {\n    return dispatch({\n      type: CHANGE_PALETTE,\n      payload: pal\n    });\n  }, [dispatch]);\n};","map":null,"metadata":{},"sourceType":"module"}