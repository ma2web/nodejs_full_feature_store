{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetLocales($slug: String!) {\\n    languages(filter: { dto: { slug: $slug } }) {\\n      listDto {\\n        items {\\n          id\\n          slug\\n          name\\n          flagUrl\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\nexport var GetLocalesDocument = /*#__PURE__*/gql(_templateObject());\nexport function useGetLocalesQuery(baseOptions) {\n  _s();\n\n  return ApolloReactHooks.useQuery(GetLocalesDocument, baseOptions);\n}\n\n_s(useGetLocalesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [ApolloReactHooks.useQuery];\n});\n\nexport function useGetLocalesLazyQuery(baseOptions) {\n  _s2();\n\n  return ApolloReactHooks.useLazyQuery(GetLocalesDocument, baseOptions);\n}\n\n_s2(useGetLocalesLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function () {\n  return [ApolloReactHooks.useLazyQuery];\n});","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/providers/LanguageProvider/gql/query.generated.ts"],"names":["gql","ApolloReactHooks","GetLocalesDocument","useGetLocalesQuery","baseOptions","useQuery","useGetLocalesLazyQuery","useLazyQuery"],"mappings":";;;;;;;;;;;;;;;AAEA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,KAAKC,gBAAZ,MAAkC,gBAAlC;AA2BA,OAAO,IAAMC,kBAAkB,GAAG,aAAcF,GAAjB,mBAAxB;AAcP,OAAO,SAASG,kBAAT,CACLC,WADK,EAKL;AAAA;;AACA,SAAOH,gBAAgB,CAACI,QAAjB,CACLH,kBADK,EAELE,WAFK,CAAP;AAID;;GAVeD,kB;UAMPF,gBAAgB,CAACI,Q;;;AAK1B,OAAO,SAASC,sBAAT,CACLF,WADK,EAKL;AAAA;;AACA,SAAOH,gBAAgB,CAACM,YAAjB,CAGLL,kBAHK,EAGeE,WAHf,CAAP;AAID;;IAVeE,sB;UAMPL,gBAAgB,CAACM,Y","sourcesContent":["import type * as ServerTypes from \"../../../types/serverTypes\";\n\nimport { gql } from \"@apollo/client\";\nimport * as ApolloReactCommon from \"@apollo/client\";\nimport * as ApolloReactHooks from \"@apollo/client\";\n\nexport type GetLocalesQueryVariables = ServerTypes.Exact<{\n  slug: ServerTypes.Scalars[\"String\"];\n}>;\n\nexport type GetLocalesQuery = { __typename?: \"Queries\" } & {\n  languages?: ServerTypes.Maybe<\n    { __typename?: \"GenericQueryResponseLanguageResType\" } & {\n      listDto?: ServerTypes.Maybe<\n        { __typename?: \"ListLanguageResType\" } & {\n          items?: ServerTypes.Maybe<\n            Array<\n              ServerTypes.Maybe<\n                { __typename?: \"LanguageRes\" } & Pick<\n                  ServerTypes.LanguageRes,\n                  \"id\" | \"slug\" | \"name\" | \"flagUrl\"\n                >\n              >\n            >\n          >;\n        }\n      >;\n    }\n  >;\n};\n\nexport const GetLocalesDocument = /*#__PURE__*/ gql`\n  query GetLocales($slug: String!) {\n    languages(filter: { dto: { slug: $slug } }) {\n      listDto {\n        items {\n          id\n          slug\n          name\n          flagUrl\n        }\n      }\n    }\n  }\n`;\nexport function useGetLocalesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    GetLocalesQuery,\n    GetLocalesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<GetLocalesQuery, GetLocalesQueryVariables>(\n    GetLocalesDocument,\n    baseOptions\n  );\n}\nexport function useGetLocalesLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    GetLocalesQuery,\n    GetLocalesQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<\n    GetLocalesQuery,\n    GetLocalesQueryVariables\n  >(GetLocalesDocument, baseOptions);\n}\nexport type GetLocalesQueryHookResult = ReturnType<typeof useGetLocalesQuery>;\nexport type GetLocalesLazyQueryHookResult = ReturnType<\n  typeof useGetLocalesLazyQuery\n>;\nexport type GetLocalesQueryResult = ApolloReactCommon.QueryResult<\n  GetLocalesQuery,\n  GetLocalesQueryVariables\n>;\n"]},"metadata":{},"sourceType":"module"}