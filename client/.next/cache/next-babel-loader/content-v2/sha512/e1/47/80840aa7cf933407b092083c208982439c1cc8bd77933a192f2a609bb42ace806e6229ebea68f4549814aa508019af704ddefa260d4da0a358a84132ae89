{"ast":null,"code":"import { HttpLink } from \"@apollo/client\";\nimport fetch from \"cross-fetch\";\nexport var EndpointType;\n\n(function (EndpointType) {\n  EndpointType[\"Main\"] = \"main\";\n  EndpointType[\"CMS\"] = \"cms\";\n  EndpointType[\"Auth\"] = \"auth\";\n})(EndpointType || (EndpointType = {}));\n\nconsole.log(\"process.env.NEXT_PUBLIC_GQL_MAIN_LINK ~\", process.env.NEXT_PUBLIC_CREDENTIAL_IDENTITYRESOURCE_URL);\nexport var AppEndpoints = {\n  main: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_GQL_MAIN_LINK,\n    fetch: fetch\n  }),\n  cms: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_GQL_CMS_LINK,\n    fetch: fetch\n  }),\n  auth: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_CREDENTIAL_IDENTITYRESOURCE_URL,\n    fetch: fetch\n  })\n};","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/core/apollo/const.ts"],"names":["HttpLink","fetch","EndpointType","console","log","process","env","NEXT_PUBLIC_CREDENTIAL_IDENTITYRESOURCE_URL","AppEndpoints","main","uri","NEXT_PUBLIC_GQL_MAIN_LINK","cms","NEXT_PUBLIC_GQL_CMS_LINK","auth"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAMZC,OAAO,CAACC,GAAR,CACE,yCADF,EAEEC,OAAO,CAACC,GAAR,CAAYC,2CAFd;AAKA,OAAO,IAAMC,YAA4C,GAAG;AAC1DC,EAAAA,IAAI,EAAE,IAAIT,QAAJ,CAAa;AAAEU,IAAAA,GAAG,EAAEL,OAAO,CAACC,GAAR,CAAYK,yBAAnB;AAA8CV,IAAAA,KAAK,EAALA;AAA9C,GAAb,CADoD;AAE1DW,EAAAA,GAAG,EAAE,IAAIZ,QAAJ,CAAa;AAAEU,IAAAA,GAAG,EAAEL,OAAO,CAACC,GAAR,CAAYO,wBAAnB;AAA6CZ,IAAAA,KAAK,EAALA;AAA7C,GAAb,CAFqD;AAG1Da,EAAAA,IAAI,EAAE,IAAId,QAAJ,CAAa;AACjBU,IAAAA,GAAG,EAAEL,OAAO,CAACC,GAAR,CAAYC,2CADA;AAEjBN,IAAAA,KAAK,EAALA;AAFiB,GAAb;AAHoD,CAArD","sourcesContent":["import { HttpLink } from \"@apollo/client\";\nimport fetch from \"cross-fetch\";\n\nexport enum EndpointType {\n  Main = \"main\",\n  CMS = \"cms\",\n  Auth = \"auth\",\n}\n\nconsole.log(\n  \"process.env.NEXT_PUBLIC_GQL_MAIN_LINK ~\",\n  process.env.NEXT_PUBLIC_CREDENTIAL_IDENTITYRESOURCE_URL\n);\n\nexport const AppEndpoints: Record<EndpointType, HttpLink> = {\n  main: new HttpLink({ uri: process.env.NEXT_PUBLIC_GQL_MAIN_LINK, fetch }),\n  cms: new HttpLink({ uri: process.env.NEXT_PUBLIC_GQL_CMS_LINK, fetch }),\n  auth: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_CREDENTIAL_IDENTITYRESOURCE_URL,\n    fetch,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}