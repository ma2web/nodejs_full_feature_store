{"ast":null,"code":"import _defineProperty from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolTextField.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ButtonBase, TextField } from \"@material-ui/core\";\nimport { isNil } from \"ramda\";\nimport React, { useMemo } from \"react\";\nimport GolFormatInputBase from \"./GolFormatInputBase\";\nimport GolInputBase from \"./GolInputBase\";\nimport useStyle from \"./GolTextField.style\";\nimport { ReactComponent as ClearIcon } from 'assets/images/icons/UI/CloseCircle.svg';\n\nvar GolTextField = function GolTextField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      helper = _ref.helperText,\n      error = _ref.error,\n      maxLength = _ref.maxLength,\n      rightPrefix = _ref.rightPrefix,\n      leftPrefix = _ref.leftPrefix,\n      maskOptions = _ref.maskOptions,\n      InputProperties = _ref.InputProps,\n      inputProperties = _ref.inputProps,\n      className = _ref.className,\n      onClear = _ref.onClear,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      other = _objectWithoutProperties(_ref, [\"label\", \"helperText\", \"error\", \"maxLength\", \"rightPrefix\", \"leftPrefix\", \"maskOptions\", \"InputProps\", \"inputProps\", \"className\", \"onClear\", \"value\", \"disabled\"]);\n\n  var styles = useStyle();\n  var valueLength = \"\".concat(value).length;\n  var helperText = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: error ? error : helper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), maxLength && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [value ? valueLength : 0, \"/\", maxLength]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }, [error, helper, maxLength, value, valueLength]);\n\n  var InputProps = _objectSpread({\n    inputComponent: maskOptions ? GolFormatInputBase : GolInputBase,\n    endAdornment: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endAdornmentContainer\",\n      children: [disabled || valueLength === 0 || isNil(onClear) ? null : /*#__PURE__*/_jsxDEV(ButtonBase, {\n        className: \"endAdornmentElement\",\n        onClick: onClear,\n        children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, _this), rightPrefix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this),\n    startAdornment: leftPrefix && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GolTextFieldLeftPrefix\",\n      children: leftPrefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  }, InputProperties);\n\n  var inputProps = _objectSpread({\n    options: maskOptions\n  }, inputProperties);\n\n  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n    InputLabelProps: {\n      className: styles.label\n    },\n    variant: \"outlined\"\n  }, _objectSpread({\n    helperText: helperText,\n    label: label,\n    error: !!error,\n    value: value,\n    InputProps: InputProps,\n    inputProps: inputProps,\n    disabled: disabled,\n    className: className\n  }, other)), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GolTextField, \"ULDZJqoDy05SP3TcUE89VESzmz0=\", false, function () {\n  return [useStyle];\n});\n\n_c = GolTextField;\nGolTextField.displayName = \"GolTextField\";\nexport default GolTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"GolTextField\");","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolTextField.tsx"],"names":["ButtonBase","TextField","isNil","React","useMemo","GolFormatInputBase","GolInputBase","useStyle","ReactComponent","ClearIcon","GolTextField","label","helper","helperText","error","maxLength","rightPrefix","leftPrefix","maskOptions","InputProperties","InputProps","inputProperties","inputProps","className","onClear","value","disabled","other","styles","valueLength","length","inputComponent","endAdornment","startAdornment","options","displayName"],"mappings":"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","sourcesContent":["import { ButtonBase, TextField, TextFieldProps } from \"@material-ui/core\";\nimport { isNil } from \"ramda\";\nimport React, { FC, ReactNode, useMemo } from \"react\";\nimport GolFormatInputBase, {\n  IGolFormatInputBaseOptions,\n} from \"./GolFormatInputBase\";\nimport GolInputBase from \"./GolInputBase\";\nimport useStyle from \"./GolTextField.style\";\nimport {ReactComponent as ClearIcon } from 'assets/images/icons/UI/CloseCircle.svg'\n\nexport interface IGolTextField extends Omit<TextFieldProps, \"error\" | \"type\"> {\n  type?: HTMLInputType;\n  error?: ReactNode;\n  maxLength?: number;\n  rightPrefix?: ReactNode | Element;\n  leftPrefix?: ReactNode | Element;\n  maskOptions?: IGolFormatInputBaseOptions;\n  onClear?: () => void;\n}\n\nconst GolTextField: FC<IGolTextField> = ({\n  label,\n  helperText: helper,\n  error,\n  maxLength,\n  rightPrefix,\n  leftPrefix,\n  maskOptions,\n  InputProps: InputProperties,\n  inputProps: inputProperties,\n  className,\n  onClear,\n  value,\n  disabled,\n  ...other\n}) => {\n  const styles = useStyle();\n\n  const valueLength = `${value}`.length;\n  const helperText = useMemo(\n    () => (\n      <>\n        <span>{error ? error : helper}</span>\n        {maxLength && (\n          <span>\n            {value ? valueLength : 0}/{maxLength}\n          </span>\n        )}\n      </>\n    ),\n    [error, helper, maxLength, value, valueLength]\n  );\n  const InputProps = {\n    inputComponent: maskOptions ? GolFormatInputBase : GolInputBase,\n    endAdornment: (\n      <div className=\"endAdornmentContainer\">\n        {disabled || valueLength === 0 || isNil(onClear) ? null : (\n          <ButtonBase className=\"endAdornmentElement\" onClick={onClear}>\n            <ClearIcon />\n          </ButtonBase>\n        )}\n        {rightPrefix}\n      </div>\n    ),\n    startAdornment: leftPrefix && (\n      <div className=\"GolTextFieldLeftPrefix\">{leftPrefix}</div>\n    ),\n    ...InputProperties,\n  };\n  const inputProps = {\n    options: maskOptions,\n    ...inputProperties,\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        className: styles.label,\n      }}\n      variant=\"outlined\"\n      {...{\n        helperText,\n        label,\n        error: !!error,\n        value,\n        InputProps,\n        inputProps,\n        disabled,\n        className,\n        ...(other as any),\n      }}\n    />\n  );\n};\n\nGolTextField.displayName = \"GolTextField\";\nexport default GolTextField;\n"]},"metadata":{},"sourceType":"module"}