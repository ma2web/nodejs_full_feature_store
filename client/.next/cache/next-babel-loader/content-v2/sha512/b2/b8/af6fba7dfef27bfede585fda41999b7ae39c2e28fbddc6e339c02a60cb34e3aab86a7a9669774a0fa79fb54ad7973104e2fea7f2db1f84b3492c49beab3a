{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/LanguageSelector/LanguageSelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useStyle from \"./LanguageSelector.styles\";\nimport { useChangeDirection, useChangePalette } from \"theme/GolThemeProvider\";\nimport { ReactComponent as FA } from \"assets/images/icons/Flag/FA.svg\";\nimport { ReactComponent as EN } from \"assets/images/icons/Flag/EN.svg\";\nexport var LanguageSelector = function LanguageSelector() {\n  _s();\n\n  var classes = useStyle();\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale,\n      asPath = _useRouter.asPath,\n      push = _useRouter.push;\n\n  var setDirection = useChangeDirection(); // const context = useContext(Context)\n\n  var setPalette = useChangePalette();\n\n  var _useState2 = useState(locale === \"en-US\" ? /*#__PURE__*/_jsxDEV(EN, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 57\n  }, _this) : /*#__PURE__*/_jsxDEV(FA, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 66\n  }, _this)),\n      icon = _useState2[0],\n      setIcon = _useState2[1];\n\n  var _useState3 = useState(locale === \"en-US\" ? \"EN-English\" : \"FA-Persian\"),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  useEffect(function () {\n    if (locale === \"en-US\") {\n      setDirection(\"ltr\");\n    } else {\n      setDirection(\"rtl\");\n    }\n  }, [locale]);\n  var options = locale === \"en-US\" ? [{\n    title: \"FA-Persian\",\n    icon: /*#__PURE__*/_jsxDEV(FA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 39\n    }, _this),\n    value: \"rtl\"\n  }] : [{\n    title: \"EN-English\",\n    icon: /*#__PURE__*/_jsxDEV(EN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, _this),\n    value: \"ltr\"\n  }];\n\n  var handleClick = function handleClick(item) {\n    if (item === \"fa-IR\") {\n      setDirection(\"rtl\");\n    } else {\n      setDirection(\"ltr\");\n    }\n\n    push(asPath, undefined, {\n      locale: item,\n      shallow: false\n    });\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleClick(\"en-US\");\n      },\n      children: \"en\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleClick(\"fa-IR\");\n      },\n      children: \"fa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setPalette(\"dark\");\n      },\n      children: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setPalette(\"light\");\n      },\n      children: \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LanguageSelector, \"mBGaoy/jNA7/3avbe4FeoTGuXso=\", false, function () {\n  return [useStyle, useRouter, useChangeDirection, useChangePalette];\n});\n\n_c = LanguageSelector;\nLanguageSelector.displayName = \"LanguageSelector\";\nexport default LanguageSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/LanguageSelector/LanguageSelector.tsx"],"names":["React","useEffect","useState","useRouter","useStyle","useChangeDirection","useChangePalette","ReactComponent","FA","EN","LanguageSelector","classes","anchorEl","setAnchorEl","locale","asPath","push","setDirection","setPalette","icon","setIcon","title","setTitle","options","value","handleClick","item","undefined","shallow","root","displayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport { IconButton, TextField, Typography } from \"@material-ui/core\";\n// import { SurButton, SurIconButton, SurPopOver } from '@sur-ui/core'\nimport { path } from \"ramda\";\nimport useStyle from \"./LanguageSelector.styles\";\nimport { useChangeDirection, useChangePalette } from \"theme/GolThemeProvider\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { ReactComponent as FA } from \"assets/images/icons/Flag/FA.svg\";\nimport { ReactComponent as EN } from \"assets/images/icons/Flag/EN.svg\";\n\nexport const LanguageSelector: React.FC = () => {\n  const classes = useStyle();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const { locale, asPath, push } = useRouter();\n\n  const setDirection = useChangeDirection();\n  // const context = useContext(Context)\n  const setPalette = useChangePalette();\n\n  const [icon, setIcon] = useState(locale === \"en-US\" ? <EN /> : <FA />);\n  const [title, setTitle] = useState(\n    locale === \"en-US\" ? \"EN-English\" : \"FA-Persian\"\n  );\n\n  useEffect(() => {\n    if (locale === \"en-US\") {\n      setDirection(\"ltr\");\n    } else {\n      setDirection(\"rtl\");\n    }\n  }, [locale]);\n\n  const options =\n    locale === \"en-US\"\n      ? [{ title: \"FA-Persian\", icon: <FA />, value: \"rtl\" }]\n      : [{ title: \"EN-English\", icon: <EN />, value: \"ltr\" }];\n\n  const handleClick = (item: string) => {\n    if (item === \"fa-IR\") {\n      setDirection(\"rtl\");\n    } else {\n      setDirection(\"ltr\");\n    }\n\n    push(asPath, undefined, { locale: item, shallow: false });\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <button onClick={() => handleClick(\"en-US\")}>en</button>\n      <button onClick={() => handleClick(\"fa-IR\")}>fa</button>\n      <button onClick={() => setPalette(\"dark\")}>dark</button>\n      <button onClick={() => setPalette(\"light\")}>light</button>\n    </div>\n  );\n};\n\nLanguageSelector.displayName = \"LanguageSelector\";\nexport default LanguageSelector;\n"]},"metadata":{},"sourceType":"module"}