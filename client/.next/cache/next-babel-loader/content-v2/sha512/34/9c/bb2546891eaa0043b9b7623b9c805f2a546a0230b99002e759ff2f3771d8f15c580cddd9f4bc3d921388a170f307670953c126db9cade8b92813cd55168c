{"ast":null,"code":"import { ApolloLink, HttpLink } from \"@apollo/client\";\nimport { AppEndpoints, EndpointType } from \"./const\";\nimport { checkContextForEndpoint } from \"./helpers\";\nimport { ApolloLinkLogger } from \"./logger\";\nconsole.log(HttpLink);\n\nconst createConditionalLink = (appLink, mainEndpoint, domainEndpoints) => domainEndpoints.reduceRight((acc, [endpoint, epLink], i, {\n  [i + 1]: [, nextLink] = [EndpointType.Main, mainEndpoint]\n}) => acc.split(checkContextForEndpoint(endpoint), epLink, nextLink), appLink);\n\nexport const createLink = (mainEndpoint, ...domainEndpoints) => {\n  // other links like error reporters or auth token validations can be set here\n  const appDefaultLink = ApolloLink.from([ApolloLinkLogger]);\n  if (!domainEndpoints.length) return appDefaultLink.concat(mainEndpoint);\n  return createConditionalLink(appDefaultLink, mainEndpoint, domainEndpoints);\n};\nconst cmsLink = ApolloLink.split(checkContextForEndpoint(EndpointType.CMS), AppEndpoints.cms);\nconst authLink = ApolloLink.split(checkContextForEndpoint(EndpointType.Auth), AppEndpoints.auth, cmsLink);\nconsole.log(authLink);\nexport const link = authLink;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/core/apollo/links.ts"],"names":["ApolloLink","HttpLink","AppEndpoints","EndpointType","checkContextForEndpoint","ApolloLinkLogger","console","log","createConditionalLink","appLink","mainEndpoint","domainEndpoints","reduceRight","acc","endpoint","epLink","i","nextLink","Main","split","createLink","appDefaultLink","from","length","concat","cmsLink","CMS","cms","authLink","Auth","auth","link"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,gBAArC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,SAA3C;AACA,SAASC,uBAAT,QAAwC,WAAxC;AACA,SAASC,gBAAT,QAAiC,UAAjC;AAIAC,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,MAAMO,qBAAqB,GAAG,CAC5BC,OAD4B,EAE5BC,YAF4B,EAG5BC,eAH4B,KAK5BA,eAAe,CAACC,WAAhB,CACE,CACEC,GADF,EAEE,CAACC,QAAD,EAAWC,MAAX,CAFF,EAGEC,CAHF,EAIE;AAAE,GAACA,CAAC,GAAG,CAAL,GAAS,GAAGC,QAAH,IAAe,CAACd,YAAY,CAACe,IAAd,EAAoBR,YAApB;AAA1B,CAJF,KAKKG,GAAG,CAACM,KAAJ,CAAUf,uBAAuB,CAACU,QAAD,CAAjC,EAA6CC,MAA7C,EAAqDE,QAArD,CANP,EAOER,OAPF,CALF;;AAeA,OAAO,MAAMW,UAAU,GAAG,CACxBV,YADwB,EAExB,GAAGC,eAFqB,KAGrB;AACH;AACA,QAAMU,cAAc,GAAGrB,UAAU,CAACsB,IAAX,CAAgB,CAACjB,gBAAD,CAAhB,CAAvB;AAEA,MAAI,CAACM,eAAe,CAACY,MAArB,EAA6B,OAAOF,cAAc,CAACG,MAAf,CAAsBd,YAAtB,CAAP;AAE7B,SAAOF,qBAAqB,CAACa,cAAD,EAAiBX,YAAjB,EAA+BC,eAA/B,CAA5B;AACD,CAVM;AAYP,MAAMc,OAAO,GAAGzB,UAAU,CAACmB,KAAX,CACdf,uBAAuB,CAACD,YAAY,CAACuB,GAAd,CADT,EAEdxB,YAAY,CAACyB,GAFC,CAAhB;AAKA,MAAMC,QAAQ,GAAG5B,UAAU,CAACmB,KAAX,CACff,uBAAuB,CAACD,YAAY,CAAC0B,IAAd,CADR,EAEf3B,YAAY,CAAC4B,IAFE,EAGfL,OAHe,CAAjB;AAMAnB,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AAEA,OAAO,MAAMG,IAAI,GAAGH,QAAb","sourcesContent":["import { ApolloLink, HttpLink } from \"@apollo/client\";\nimport { AppEndpoints, EndpointType } from \"./const\";\nimport { checkContextForEndpoint } from \"./helpers\";\nimport { ApolloLinkLogger } from \"./logger\";\n\ntype DomainEndpoint = [EndpointType, HttpLink];\n\nconsole.log(HttpLink);\n\nconst createConditionalLink = (\n  appLink: ApolloLink,\n  mainEndpoint: HttpLink,\n  domainEndpoints: DomainEndpoint[]\n) =>\n  domainEndpoints.reduceRight(\n    (\n      acc,\n      [endpoint, epLink],\n      i,\n      { [i + 1]: [, nextLink] = [EndpointType.Main, mainEndpoint] }\n    ) => acc.split(checkContextForEndpoint(endpoint), epLink, nextLink),\n    appLink\n  );\n\nexport const createLink = (\n  mainEndpoint: HttpLink,\n  ...domainEndpoints: DomainEndpoint[]\n) => {\n  // other links like error reporters or auth token validations can be set here\n  const appDefaultLink = ApolloLink.from([ApolloLinkLogger]);\n\n  if (!domainEndpoints.length) return appDefaultLink.concat(mainEndpoint);\n\n  return createConditionalLink(appDefaultLink, mainEndpoint, domainEndpoints);\n};\n\nconst cmsLink = ApolloLink.split(\n  checkContextForEndpoint(EndpointType.CMS),\n  AppEndpoints.cms\n);\n\nconst authLink = ApolloLink.split(\n  checkContextForEndpoint(EndpointType.Auth),\n  AppEndpoints.auth,\n  cmsLink\n);\n\nconsole.log(authLink);\n\nexport const link = authLink;\n"]},"metadata":{},"sourceType":"module"}