{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/domains/Products/Products.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useProductsStyles from \"./useProductsStyles\";\nimport ProductsMessages from \"./Products.message\";\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { api } from \"domains/api\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar Products = function Products() {\n  _s();\n\n  var rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)];\n  var classes = useProductsStyles();\n\n  var _useIntl = useIntl(),\n      formatMessage = _useIntl.formatMessage;\n\n  useEffect(function () {\n    axios.get(\"\".concat(api, \"/api/products\")).then(function (res) {\n      return console.log(res);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formatMessage(ProductsMessages.products)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Dessert (100g serving)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Fat\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Carbs\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Protein\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(function (row) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, _this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"0tOE4TAGwzemfM0+V/jXSKyvahM=\", false, function () {\n  return [useProductsStyles, useIntl];\n});\n\n_c = Products;\nexport default Products;\nvar columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 70\n}, {\n  field: \"name\",\n  headerName: \"Product name\",\n  width: 130\n}, {\n  field: \"categories.name\",\n  headerName: \"Categories\",\n  width: 130\n}, {\n  field: \"inStock\",\n  headerName: \"inStock\",\n  type: \"number\",\n  width: 90\n}, {\n  field: \"fullName\",\n  headerName: \"Full name\",\n  description: \"This column has a value getter and is not sortable.\",\n  sortable: false,\n  width: 160,\n  valueGetter: function valueGetter(params) {\n    return \"\".concat(params.getValue(\"firstName\") || \"\", \" \").concat(params.getValue(\"lastName\") || \"\");\n  }\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/domains/Products/Products.tsx"],"names":["React","useEffect","useProductsStyles","ProductsMessages","axios","useIntl","api","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","calories","fat","carbs","protein","Products","rows","classes","formatMessage","get","then","res","console","log","err","root","products","map","row","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport useProductsStyles from \"./useProductsStyles\";\nimport ProductsMessages from \"./Products.message\";\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { api } from \"domains/api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst Products = () => {\n  const rows = [\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n  ];\n\n  const classes = useProductsStyles();\n  const { formatMessage } = useIntl();\n\n  useEffect(() => {\n    axios\n      .get(`${api}/api/products`)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div className={classes.root}>\n      <h1>{formatMessage(ProductsMessages.products)}</h1>\n      <div>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Dessert (100g serving)</TableCell>\n                <TableCell align=\"right\">Calories</TableCell>\n                <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.calories}</TableCell>\n                  <TableCell align=\"right\">{row.fat}</TableCell>\n                  <TableCell align=\"right\">{row.carbs}</TableCell>\n                  <TableCell align=\"right\">{row.protein}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n\nconst columns = [\n  { field: \"id\", headerName: \"ID\", width: 70 },\n  { field: \"name\", headerName: \"Product name\", width: 130 },\n  { field: \"categories.name\", headerName: \"Categories\", width: 130 },\n  {\n    field: \"inStock\",\n    headerName: \"inStock\",\n    type: \"number\",\n    width: 90,\n  },\n  {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue(\"firstName\") || \"\"} ${\n        params.getValue(\"lastName\") || \"\"\n      }`,\n  },\n];\n"]},"metadata":{},"sourceType":"module"}