{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ButtonBase, TextField } from \"@material-ui/core\";\nimport { isNil } from \"ramda\";\nimport React, { useMemo } from \"react\";\nimport GolFormatInputBase from \"./GolFormatInputBase\";\nimport GolInputBase from \"./GolInputBase\";\nimport useStyle from \"./GolTextField.style\";\nimport { ReactComponent as ClearIcon } from 'assets/images/icons/UI/CloseCircle.svg';\n\nconst GolTextField = (_ref) => {\n  let {\n    label,\n    helperText: helper,\n    error,\n    maxLength,\n    rightPrefix,\n    leftPrefix,\n    maskOptions,\n    InputProps: InputProperties,\n    inputProps: inputProperties,\n    className,\n    onClear,\n    value,\n    disabled\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"label\", \"helperText\", \"error\", \"maxLength\", \"rightPrefix\", \"leftPrefix\", \"maskOptions\", \"InputProps\", \"inputProps\", \"className\", \"onClear\", \"value\", \"disabled\"]);\n\n  const styles = useStyle();\n  const valueLength = `${value}`.length;\n  const helperText = useMemo(() => /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      children: error ? error : helper\n    }), maxLength && /*#__PURE__*/_jsxs(\"span\", {\n      children: [value ? valueLength : 0, \"/\", maxLength]\n    })]\n  }), [error, helper, maxLength, value, valueLength]);\n\n  const InputProps = _objectSpread({\n    inputComponent: maskOptions ? GolFormatInputBase : GolInputBase,\n    endAdornment: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"endAdornmentContainer\",\n      children: [disabled || valueLength === 0 || isNil(onClear) ? null : /*#__PURE__*/_jsx(ButtonBase, {\n        className: \"endAdornmentElement\",\n        onClick: onClear,\n        children: /*#__PURE__*/_jsx(ClearIcon, {})\n      }), rightPrefix]\n    }),\n    startAdornment: leftPrefix && /*#__PURE__*/_jsx(\"div\", {\n      className: \"GolTextFieldLeftPrefix\",\n      children: leftPrefix\n    })\n  }, InputProperties);\n\n  const inputProps = _objectSpread({\n    options: maskOptions\n  }, inputProperties);\n\n  return /*#__PURE__*/_jsx(TextField, _objectSpread({\n    InputLabelProps: {\n      className: styles.label\n    },\n    variant: \"outlined\"\n  }, _objectSpread({\n    helperText,\n    label,\n    error: !!error,\n    value,\n    InputProps,\n    inputProps,\n    disabled,\n    className\n  }, other)));\n};\n\nGolTextField.displayName = \"GolTextField\";\nexport default GolTextField;","map":null,"metadata":{},"sourceType":"module"}