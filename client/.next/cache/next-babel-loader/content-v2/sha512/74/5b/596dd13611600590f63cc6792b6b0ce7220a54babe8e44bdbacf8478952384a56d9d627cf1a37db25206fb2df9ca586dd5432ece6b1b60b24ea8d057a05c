{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolInputBase/GolInputBase.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { forwardRef } from 'react';\nimport useStyles from './GolInputBase.styles';\nimport { InputBase } from '@material-ui/core';\nvar GolInputBase = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      placeholder = _ref.placeholder,\n      other = _objectWithoutProperties(_ref, [\"value\", \"onChange\", \"placeholder\"]);\n\n  var classes = useStyles({});\n  return /*#__PURE__*/_jsxDEV(InputBase, _objectSpread({\n    disabled: true,\n    className: [classes.root, 'GolInputBase'].join(' '),\n    \"data-testid\": \"\".concat(other.id, \"-inputBase\")\n  }, _objectSpread({\n    value: value,\n    onChange: onChange,\n    placeholder: placeholder,\n    ref: ref\n  }, other)), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, _this);\n}, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n}));\n_c2 = GolInputBase;\nGolInputBase.displayName = 'GolInput';\nexport default GolInputBase;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GolInputBase$forwardRef\");\n$RefreshReg$(_c2, \"GolInputBase\");","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/components/GolTextField/GolInputBase/GolInputBase.tsx"],"names":["React","forwardRef","useStyles","InputBase","GolInputBase","ref","value","onChange","placeholder","other","classes","root","join","id","displayName"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,SAAT,QAAsC,mBAAtC;AAWA,IAAMC,YAAY,gBAAGH,UAAU,SAC7B,gBAA6CI,GAA7C,EAAqD;AAAA;;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAAjBC,KAAiB;;AACnD,MAAMC,OAAO,GAAGR,SAAS,CAAC,EAAD,CAAzB;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,EAAE,CAACQ,OAAO,CAACC,IAAT,EAAe,cAAf,EAA+BC,IAA/B,CAAoC,GAApC,CAFb;AAGE,6BAAgBH,KAAK,CAACI,EAAtB;AAHF;AAIQP,IAAAA,KAAK,EAALA,KAJR;AAIeC,IAAAA,QAAQ,EAARA,QAJf;AAIyBC,IAAAA,WAAW,EAAXA,WAJzB;AAIsCH,IAAAA,GAAG,EAAHA;AAJtC,KAI8CI,KAJ9C;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAZ4B;AAAA,UAEXP,SAFW;AAAA,GAA/B;MAAME,Y;AAeNA,YAAY,CAACU,WAAb,GAA2B,UAA3B;AAEA,eAAeV,YAAf","sourcesContent":["import React, { forwardRef } from 'react'\nimport useStyles from './GolInputBase.styles'\nimport { InputBase, InputProps } from '@material-ui/core'\n\nexport interface IGolInput extends InputProps {\n  value?: string | number\n  placeholder?: string\n  disabled?: boolean\n  onChange?(\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void\n}\n\nconst GolInputBase = forwardRef<any, IGolInput>(\n  ({ value, onChange, placeholder, ...other }, ref) => {\n    const classes = useStyles({})\n\n    return (\n      <InputBase\n        disabled\n        className={[classes.root, 'GolInputBase'].join(' ')}\n        data-testid={`${other.id}-inputBase`}\n        {...{ value, onChange, placeholder, ref, ...other }}\n      />\n    )\n  },\n)\n\nGolInputBase.displayName = 'GolInput'\n\nexport default GolInputBase\n"]},"metadata":{},"sourceType":"module"}