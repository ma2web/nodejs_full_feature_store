{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/providers/LanguageProvider/LanguageProvider.tsx\";\nimport { useRouter } from \"next/router\";\nimport { IntlProvider, ReactIntlErrorCode } from \"react-intl\";\nimport fa from \"../../../public/static/locales/fa-IR.json\";\nimport ar from \"../../../public/static/locales/ar-AR.json\";\nimport en from \"../../../public/static/locales/en-US.json\";\n\nconst LanguageProvider = ({\n  children\n}) => {\n  var _ref;\n\n  const {\n    locale,\n    defaultLocale\n  } = useRouter();\n  const languages = {\n    \"fa-IR\": fa,\n    \"ar-AR\": ar,\n    \"en-US\": en\n  };\n  const currentLocale = (_ref = locale !== null && locale !== void 0 ? locale : defaultLocale) !== null && _ref !== void 0 ? _ref : \"fa-IR\";\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: currentLocale,\n    messages: languages[currentLocale],\n    onError: err => {\n      if (err.code === ReactIntlErrorCode.MISSING_TRANSLATION) {\n        return console.warn(err.message, \"ðŸŽƒ MISSING_TRANSLATION\");\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LanguageProvider;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/providers/LanguageProvider/LanguageProvider.tsx"],"names":["useRouter","IntlProvider","ReactIntlErrorCode","fa","ar","en","LanguageProvider","children","locale","defaultLocale","languages","currentLocale","err","code","MISSING_TRANSLATION","console","warn","message"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,YAAjD;AACA,OAAOC,EAAP,MAAe,2CAAf;AACA,OAAOC,EAAP,MAAe,2CAAf;AACA,OAAOC,EAAP,MAAe,2CAAf;;AAEA,MAAMC,gBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BT,SAAS,EAA3C;AAEA,QAAMU,SAAS,GAAG;AAChB,aAASP,EADO;AAEhB,aAASC,EAFO;AAGhB,aAASC;AAHO,GAAlB;AAMA,QAAMM,aAAa,WAAGH,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAaC,aAAb,uCAA+B,OAAlD;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEE,aADV;AAEE,IAAA,QAAQ,EAAED,SAAS,CAACC,aAAD,CAFrB;AAGE,IAAA,OAAO,EAAGC,GAAD,IAAS;AAChB,UAAIA,GAAG,CAACC,IAAJ,KAAaX,kBAAkB,CAACY,mBAApC,EAAyD;AACvD,eAAOC,OAAO,CAACC,IAAR,CAAaJ,GAAG,CAACK,OAAjB,EAA0B,wBAA1B,CAAP;AACD;AACF,KAPH;AAAA,cASGV;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;AA0BA,eAAeD,gBAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { FC } from \"react\";\nimport { IntlProvider, ReactIntlErrorCode } from \"react-intl\";\nimport fa from \"../../../public/static/locales/fa-IR.json\";\nimport ar from \"../../../public/static/locales/ar-AR.json\";\nimport en from \"../../../public/static/locales/en-US.json\";\n\nconst LanguageProvider: FC = ({ children }) => {\n  const { locale, defaultLocale } = useRouter();\n\n  const languages = {\n    \"fa-IR\": fa,\n    \"ar-AR\": ar,\n    \"en-US\": en,\n  };\n\n  const currentLocale = locale ?? defaultLocale ?? (\"fa-IR\" as any);\n\n  return (\n    <IntlProvider\n      locale={currentLocale}\n      messages={languages[currentLocale] as any}\n      onError={(err) => {\n        if (err.code === ReactIntlErrorCode.MISSING_TRANSLATION) {\n          return console.warn(err.message, \"ðŸŽƒ MISSING_TRANSLATION\");\n        }\n      }}\n    >\n      {children}\n    </IntlProvider>\n  );\n};\n\nexport default LanguageProvider;\n"]},"metadata":{},"sourceType":"module"}