{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/LanguageSelector/LanguageSelector.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useStyle from \"./LanguageSelector.styles\";\nimport { useChangeDirection } from \"theme/GolThemeProvider\";\nimport { ReactComponent as FA } from \"assets/images/icons/Flag/FA.svg\";\nimport { ReactComponent as EN } from \"assets/images/icons/Flag/EN.svg\";\nexport const LanguageSelector = () => {\n  const classes = useStyle();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    locale,\n    asPath,\n    push\n  } = useRouter();\n  const setDirection = useChangeDirection(); // const context = useContext(Context)\n\n  const {\n    0: icon,\n    1: setIcon\n  } = useState(locale === \"en-US\" ? /*#__PURE__*/_jsxDEV(EN, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 57\n  }, this) : /*#__PURE__*/_jsxDEV(FA, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 66\n  }, this));\n  const {\n    0: title,\n    1: setTitle\n  } = useState(locale === \"en-US\" ? \"EN-English\" : \"FA-Persian\");\n  useEffect(() => {\n    if (locale === \"en-US\") {\n      setDirection(\"ltr\");\n    } else {\n      setDirection(\"rtl\");\n    }\n  }, [locale]);\n  const options = locale === \"en-US\" ? [{\n    title: \"FA-Persian\",\n    icon: /*#__PURE__*/_jsxDEV(FA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 39\n    }, this),\n    value: \"rtl\"\n  }] : [{\n    title: \"EN-English\",\n    icon: /*#__PURE__*/_jsxDEV(EN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 39\n    }, this),\n    value: \"ltr\"\n  }];\n\n  const handleClick = item => {\n    if (item === \"fa-IR\") {\n      setDirection(\"rtl\");\n    } else {\n      setDirection(\"ltr\");\n    }\n\n    push(asPath, undefined, {\n      locale: item,\n      shallow: false\n    });\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(\"en-US\"),\n      children: \"en\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(\"fa-IR\"),\n      children: \"fa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\nLanguageSelector.displayName = \"LanguageSelector\";\nexport default LanguageSelector;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/LanguageSelector/LanguageSelector.tsx"],"names":["React","useEffect","useState","useRouter","useStyle","useChangeDirection","ReactComponent","FA","EN","LanguageSelector","classes","anchorEl","setAnchorEl","locale","asPath","push","setDirection","icon","setIcon","title","setTitle","options","value","handleClick","item","undefined","shallow","root","displayName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAIA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,SAASC,cAAc,IAAIC,EAA3B,QAAqC,iCAArC;AACA,SAASD,cAAc,IAAIE,EAA3B,QAAqC,iCAArC;AAEA,OAAO,MAAMC,gBAA0B,GAAG,MAAM;AAC9C,QAAMC,OAAO,GAAGN,QAAQ,EAAxB;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAA2B,IAA3B,CAAxC;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA2BZ,SAAS,EAA1C;AAEA,QAAMa,YAAY,GAAGX,kBAAkB,EAAvC,CAL8C,CAM9C;;AAEA,QAAM;AAAA,OAACY,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAACW,MAAM,KAAK,OAAX,gBAAqB,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA,UAArB,gBAA8B,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA,UAA/B,CAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAChCW,MAAM,KAAK,OAAX,GAAqB,YAArB,GAAoC,YADJ,CAAlC;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,MAAM,KAAK,OAAf,EAAwB;AACtBG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAACH,MAAD,CANM,CAAT;AAQA,QAAMQ,OAAO,GACXR,MAAM,KAAK,OAAX,GACI,CAAC;AAAEM,IAAAA,KAAK,EAAE,YAAT;AAAuBF,IAAAA,IAAI,eAAE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA,YAA7B;AAAqCK,IAAAA,KAAK,EAAE;AAA5C,GAAD,CADJ,GAEI,CAAC;AAAEH,IAAAA,KAAK,EAAE,YAAT;AAAuBF,IAAAA,IAAI,eAAE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA,YAA7B;AAAqCK,IAAAA,KAAK,EAAE;AAA5C,GAAD,CAHN;;AAKA,QAAMC,WAAW,GAAIC,IAAD,IAAkB;AACpC,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpBR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDD,IAAAA,IAAI,CAACD,MAAD,EAASW,SAAT,EAAoB;AAAEZ,MAAAA,MAAM,EAAEW,IAAV;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAApB,CAAJ;AACAd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACiB,IAAxB;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3CM;AA6CPd,gBAAgB,CAACmB,WAAjB,GAA+B,kBAA/B;AACA,eAAenB,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport { IconButton, TextField, Typography } from \"@material-ui/core\";\n// import { SurButton, SurIconButton, SurPopOver } from '@sur-ui/core'\nimport { path } from \"ramda\";\nimport useStyle from \"./LanguageSelector.styles\";\nimport { useChangeDirection } from \"theme/GolThemeProvider\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { ReactComponent as FA } from \"assets/images/icons/Flag/FA.svg\";\nimport { ReactComponent as EN } from \"assets/images/icons/Flag/EN.svg\";\n\nexport const LanguageSelector: React.FC = () => {\n  const classes = useStyle();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const { locale, asPath, push } = useRouter();\n\n  const setDirection = useChangeDirection();\n  // const context = useContext(Context)\n\n  const [icon, setIcon] = useState(locale === \"en-US\" ? <EN /> : <FA />);\n  const [title, setTitle] = useState(\n    locale === \"en-US\" ? \"EN-English\" : \"FA-Persian\"\n  );\n\n  useEffect(() => {\n    if (locale === \"en-US\") {\n      setDirection(\"ltr\");\n    } else {\n      setDirection(\"rtl\");\n    }\n  }, [locale]);\n\n  const options =\n    locale === \"en-US\"\n      ? [{ title: \"FA-Persian\", icon: <FA />, value: \"rtl\" }]\n      : [{ title: \"EN-English\", icon: <EN />, value: \"ltr\" }];\n\n  const handleClick = (item: string) => {\n    if (item === \"fa-IR\") {\n      setDirection(\"rtl\");\n    } else {\n      setDirection(\"ltr\");\n    }\n\n    push(asPath, undefined, { locale: item, shallow: false });\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <button onClick={() => handleClick(\"en-US\")}>en</button>\n      <button onClick={() => handleClick(\"fa-IR\")}>fa</button>\n    </div>\n  );\n};\n\nLanguageSelector.displayName = \"LanguageSelector\";\nexport default LanguageSelector;\n"]},"metadata":{},"sourceType":"module"}