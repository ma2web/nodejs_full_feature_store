{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/mohammad/projects/dorreh/market multi/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { forwardRef } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport cs from \"classnames\";\nimport useStyle from \"./GolButton.style\";\nvar GolButton = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var variant = _ref.variant,\n      hasNeutral = _ref.hasNeutral,\n      ripple = _ref.ripple,\n      color = _ref.color,\n      children = _ref.children,\n      className = _ref.className,\n      classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"variant\", \"hasNeutral\", \"ripple\", \"color\", \"children\", \"className\", \"classes\"]);\n\n  var styles = useStyle({\n    variant: variant,\n    ripple: ripple,\n    classes: classes\n  });\n  var isNeutral = !!hasNeutral && !!variant;\n  var neutralClassName = styles[\"\".concat(variant, \"Neutral\")];\n  return /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref,\n    className: cs(className, _defineProperty({}, neutralClassName, isNeutral)),\n    color: hasNeutral ? undefined : color\n  }, {\n    classes: {\n      root: styles.root,\n      containedSecondary: styles.containedSecondary,\n      outlinedSecondary: styles.outlinedSecondary,\n      textSecondary: styles.textSecondary,\n      containedPrimary: styles.containedPrimary,\n      outlinedPrimary: styles.outlinedPrimary,\n      textPrimary: styles.textPrimary\n    },\n    variant: variant\n  }), props), {}, {\n    children: children\n  }));\n});\nGolButton.displayName = \"GolButton\";\nGolButton.defaultProps = {\n  variant: \"contained\",\n  color: \"primary\",\n  ripple: \"animated\"\n};\nexport default GolButton;","map":null,"metadata":{},"sourceType":"module"}