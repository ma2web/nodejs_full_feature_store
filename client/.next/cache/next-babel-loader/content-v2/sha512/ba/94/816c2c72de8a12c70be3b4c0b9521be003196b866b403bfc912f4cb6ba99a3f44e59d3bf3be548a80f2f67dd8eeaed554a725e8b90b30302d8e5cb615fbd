{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ReactComponent as ArrowDown } from \"assets/images/icons/Arrows/Big/Down.svg\";\nimport { ReactComponent as ArrowUp } from \"assets/images/icons/Arrows/Big/up.svg\";\nimport { ReactComponent as SendSvg } from \"assets/images/icons/Commiunication/Send.svg\";\nimport { ReactComponent as SearchSvg } from \"assets/images/icons/UI/Search.svg\";\nimport GolTextField from \"components/GolTextField\";\nimport React, { useState, useEffect } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport MessangerMessages from \"./Messanger.message\";\nimport PrivateChat from \"./PrivateChat\";\nimport { useMessangerStyle } from \"./useMessangerStyle\";\nimport { socket } from \"utils/socket\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\n\nconst Messanger = ({\n  openChat,\n  setOpenChat\n}) => {\n  const styles = useMessangerStyle();\n  const {\n    formatMessage\n  } = useIntl();\n  const {\n    0: privateMessage,\n    1: setPrivate\n  } = useState(false);\n  const {\n    0: selectedContact,\n    1: setSelectedContact\n  } = useState(null);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: orders,\n    1: setOrders\n  } = useState([]);\n  const {\n    0: counter,\n    1: setCounter\n  } = useState([]);\n  useEffect(() => {\n    var _localStorage;\n\n    axios.get(`${api}/api/order`, {\n      headers: {\n        \"x-auth-token\": (_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.token\n      }\n    }).then(res => setOrders(res === null || res === void 0 ? void 0 : res.data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    if (selectedContact !== null && selectedContact !== void 0 && selectedContact._id) {\n      var _localStorage2;\n\n      setLoading(true);\n      socket.emit(\"join\", {\n        order: selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id\n      });\n      axios.get(`${api}/api/messages/${selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id}`, {\n        headers: {\n          \"x-auth-token\": (_localStorage2 = localStorage) === null || _localStorage2 === void 0 ? void 0 : _localStorage2.token\n        }\n      }).then(res => {\n        var _res$data;\n\n        setLoading(false);\n        setMessages(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.messages);\n      }).catch(err => console.log(err));\n    }\n  }, [selectedContact]);\n  useEffect(() => {\n    socket.on(\"receiveMessage\", data => {\n      console.log(\"selectedContact, data ~ selectedContact, data\", selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id, data === null || data === void 0 ? void 0 : data.order);\n\n      if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) == (data === null || data === void 0 ? void 0 : data.order)) {\n        setMessages(prev => [...prev, data]);\n      }\n    });\n    socket.on(\"newConversation\", data => {\n      if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) !== (data === null || data === void 0 ? void 0 : data.order)) {\n        setCounter(prev => [...prev, data === null || data === void 0 ? void 0 : data._id]);\n      }\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [privateMessage && /*#__PURE__*/_jsx(PrivateChat, _objectSpread({}, {\n      selectedContact,\n      setPrivate,\n      messages,\n      setMessages,\n      socket,\n      loading\n    })), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.root,\n      style: openChat ? {\n        bottom: 0\n      } : {\n        bottom: -372\n      },\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.header,\n        onClick: () => setOpenChat(!openChat),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: formatMessage(MessangerMessages.messaging)\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.spaceBetween,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(SendSvg, {\n              className: styles.sendSvg\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.toggle,\n            onClick: () => setOpenChat(!openChat),\n            children: openChat ? /*#__PURE__*/_jsx(ArrowDown, {}) : /*#__PURE__*/_jsx(ArrowUp, {})\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.body,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.search,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.messageSearch,\n            children: /*#__PURE__*/_jsx(GolTextField, {\n              className: styles.searchInput,\n              label: /*#__PURE__*/_jsxs(\"span\", {\n                className: styles.textFieldLabel,\n                children: [/*#__PURE__*/_jsx(SearchSvg, {}), /*#__PURE__*/_jsx(\"span\", {\n                  children: \"Search\"\n                })]\n              })\n            })\n          }), orders !== null && orders !== void 0 && orders.length ? /*#__PURE__*/_jsx(\"div\", {\n            className: styles.messages,\n            children: orders === null || orders === void 0 ? void 0 : orders.map(item => {\n              var _item$customer, _item$customer2, _item$customer3, _item$customer4, _item$customer5;\n\n              return /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.message,\n                onClick: () => {\n                  setSelectedContact(item);\n                  setPrivate(true);\n                  let newCounter = counter === null || counter === void 0 ? void 0 : counter.filter(el => el !== (item === null || item === void 0 ? void 0 : item._id));\n                  setCounter(newCounter);\n                },\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.flex,\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: styles.avatar\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.content,\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      className: styles.name,\n                      children: `${item !== null && item !== void 0 && (_item$customer = item.customer) !== null && _item$customer !== void 0 && _item$customer.firstName ? item === null || item === void 0 ? void 0 : (_item$customer2 = item.customer) === null || _item$customer2 === void 0 ? void 0 : _item$customer2.firstName : \"No Name\"} ${item !== null && item !== void 0 && (_item$customer3 = item.customer) !== null && _item$customer3 !== void 0 && _item$customer3.lastName ? item === null || item === void 0 ? void 0 : (_item$customer4 = item.customer) === null || _item$customer4 === void 0 ? void 0 : _item$customer4.lastName : \"\"}`\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: styles.text,\n                      children: item === null || item === void 0 ? void 0 : (_item$customer5 = item.customer) === null || _item$customer5 === void 0 ? void 0 : _item$customer5.email\n                    })]\n                  }), (selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) !== (item === null || item === void 0 ? void 0 : item._id) && counter.includes(item === null || item === void 0 ? void 0 : item._id) && /*#__PURE__*/_jsx(\"div\", {\n                    className: styles.counter,\n                    children: counter === null || counter === void 0 ? void 0 : counter.filter(el => el === (item === null || item === void 0 ? void 0 : item._id)).length\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.date,\n                  children: new Date(item === null || item === void 0 ? void 0 : item.createdAt).toLocaleDateString()\n                })]\n              }, item === null || item === void 0 ? void 0 : item._id);\n            })\n          }) : \"No Orders\"]\n        })\n      })]\n    })]\n  });\n};\n\nexport default Messanger;","map":null,"metadata":{},"sourceType":"module"}