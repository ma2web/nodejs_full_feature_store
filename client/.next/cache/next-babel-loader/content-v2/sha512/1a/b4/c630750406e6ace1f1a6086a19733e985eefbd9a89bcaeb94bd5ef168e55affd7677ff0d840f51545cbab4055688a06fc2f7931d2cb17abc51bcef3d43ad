{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/Layout/components/chat/Messanger.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ReactComponent as ArrowDown } from \"assets/images/icons/Arrows/Big/Down.svg\";\nimport { ReactComponent as ArrowUp } from \"assets/images/icons/Arrows/Big/up.svg\";\nimport { ReactComponent as SendSvg } from \"assets/images/icons/Commiunication/Send.svg\";\nimport { ReactComponent as SearchSvg } from \"assets/images/icons/UI/Search.svg\";\nimport GolTextField from \"components/GolTextField\";\nimport React, { useState, useEffect } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport MessangerMessages from \"./Messanger.message\";\nimport PrivateChat from \"./PrivateChat\";\nimport { useMessangerStyle } from \"./useMessangerStyle\";\nimport { socket } from \"utils/socket\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\n\nconst Messanger = ({\n  openChat,\n  setOpenChat\n}) => {\n  const styles = useMessangerStyle();\n  const {\n    formatMessage\n  } = useIntl();\n  const {\n    0: privateMessage,\n    1: setPrivate\n  } = useState(false);\n  const {\n    0: selectedContact,\n    1: setSelectedContact\n  } = useState(null);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: orders,\n    1: setOrders\n  } = useState([]);\n  useEffect(() => {\n    var _localStorage;\n\n    axios.get(`${api}/api/order`, {\n      headers: {\n        \"x-auth-token\": (_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.token\n      }\n    }).then(res => setOrders(res === null || res === void 0 ? void 0 : res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [privateMessage && /*#__PURE__*/_jsxDEV(PrivateChat, _objectSpread({}, {\n      selectedContact,\n      setPrivate,\n      messages,\n      setMessages,\n      socket\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      style: openChat ? {\n        bottom: 0\n      } : {\n        bottom: -372\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        onClick: () => setOpenChat(!openChat),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: formatMessage(MessangerMessages.messaging)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.spaceBetween,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SendSvg, {\n              className: styles.sendSvg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.toggle,\n            onClick: () => setOpenChat(!openChat),\n            children: openChat ? /*#__PURE__*/_jsxDEV(ArrowDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(ArrowUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.body,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.search,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.messageSearch,\n            children: /*#__PURE__*/_jsxDEV(GolTextField, {\n              className: styles.searchInput,\n              label: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.textFieldLabel,\n                children: [/*#__PURE__*/_jsxDEV(SearchSvg, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), orders !== null && orders !== void 0 && orders.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.messages,\n            children: orders === null || orders === void 0 ? void 0 : orders.map(item => {\n              // let {\n              //   customer: {\n              //     avatar,\n              //     firstName,\n              //     lastName,\n              //     email,\n              //     countryCode,\n              //     phoneNumber,\n              //   },\n              //   status,\n              //   createdAt: date,\n              // } = item;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.message,\n                onClick: () => {\n                  setSelectedContact(item);\n                  setPrivate(true);\n                },\n                children: \"asd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this) : \"No Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nconst messagesList = [{\n  avatar: \"\",\n  firstName: \"Order\",\n  lastName: \"1\",\n  body: \"Order1: its my honor to see you around\",\n  date: \"29 julay\"\n}, {\n  avatar: \"\",\n  firstName: \"Order\",\n  lastName: \"2\",\n  body: \"Order2: its my honor to see you around\",\n  date: \"29 julay\"\n}];\nexport default Messanger;","map":{"version":3,"sources":["/home/mohammad/projects/dorreh/market multi/client/src/layout/CI/Layout/components/chat/Messanger.tsx"],"names":["ReactComponent","ArrowDown","ArrowUp","SendSvg","SearchSvg","GolTextField","React","useState","useEffect","useIntl","MessangerMessages","PrivateChat","useMessangerStyle","socket","axios","api","Messanger","openChat","setOpenChat","styles","formatMessage","privateMessage","setPrivate","selectedContact","setSelectedContact","messages","setMessages","orders","setOrders","get","headers","localStorage","token","then","res","data","catch","err","console","log","root","bottom","header","messaging","spaceBetween","sendSvg","toggle","body","search","messageSearch","searchInput","textFieldLabel","length","map","item","message","messagesList","avatar","firstName","lastName","date"],"mappings":";;;;;;;;;AAAA,SAASA,cAAc,IAAIC,SAA3B,QAA4C,yCAA5C;AACA,SAASD,cAAc,IAAIE,OAA3B,QAA0C,uCAA1C;AACA,SAASF,cAAc,IAAIG,OAA3B,QAA0C,6CAA1C;AACA,SAASH,cAAc,IAAII,SAA3B,QAA4C,mCAA5C;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC/C,QAAMC,MAAM,GAAGP,iBAAiB,EAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAoBX,OAAO,EAAjC;AACA,QAAM;AAAA,OAACY,cAAD;AAAA,OAAiBC;AAAjB,MAA+Bf,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM;AAAA,OAACgB,eAAD;AAAA,OAAkBC;AAAlB,MAAwCjB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAACkB,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACoB,MAAD;AAAA,OAASC;AAAT,MAAsBrB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACdM,IAAAA,KAAK,CACFe,GADH,CACQ,GAAEd,GAAI,YADd,EAC2B;AACvBe,MAAAA,OAAO,EAAE;AACP,yCAAgBC,YAAhB,kDAAgB,cAAcC;AADvB;AADc,KAD3B,EAMGC,IANH,CAMSC,GAAD,IAASN,SAAS,CAACM,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEC,IAAN,CAN1B,EAOGC,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,eACGhB,cAAc,iBACb,QAAC,WAAD,oBACM;AACFE,MAAAA,eADE;AAEFD,MAAAA,UAFE;AAGFG,MAAAA,QAHE;AAIFC,MAAAA,WAJE;AAKFb,MAAAA;AALE,KADN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYE;AACE,MAAA,SAAS,EAAEM,MAAM,CAACqB,IADpB;AAEE,MAAA,KAAK,EAAEvB,QAAQ,GAAG;AAAEwB,QAAAA,MAAM,EAAE;AAAV,OAAH,GAAmB;AAAEA,QAAAA,MAAM,EAAE,CAAC;AAAX,OAFpC;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAACuB,MAAvB;AAA+B,QAAA,OAAO,EAAE,MAAMxB,WAAW,CAAC,CAACD,QAAF,CAAzD;AAAA,gCACE;AAAA,oBAAMG,aAAa,CAACV,iBAAiB,CAACiC,SAAnB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAExB,MAAM,CAACyB,YAAvB;AAAA,kCACE;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAEzB,MAAM,CAAC0B;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,SAAS,EAAE1B,MAAM,CAAC2B,MADpB;AAEE,YAAA,OAAO,EAAE,MAAM5B,WAAW,CAAC,CAACD,QAAF,CAF5B;AAAA,sBAIGA,QAAQ,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAmB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAmBE;AAAK,QAAA,SAAS,EAAEE,MAAM,CAAC4B,IAAvB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE5B,MAAM,CAAC6B,MAAvB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAE7B,MAAM,CAAC8B,aAAvB;AAAA,mCACE,QAAC,YAAD;AACE,cAAA,SAAS,EAAE9B,MAAM,CAAC+B,WADpB;AAEE,cAAA,KAAK,eACH;AAAM,gBAAA,SAAS,EAAE/B,MAAM,CAACgC,cAAxB;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAaGxB,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEyB,MAAR,gBACC;AAAK,YAAA,SAAS,EAAEjC,MAAM,CAACM,QAAvB;AAAA,sBACGE,MADH,aACGA,MADH,uBACGA,MAAM,CAAE0B,GAAR,CAAaC,IAAD,IAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCACE;AACE,gBAAA,SAAS,EAAEnC,MAAM,CAACoC,OADpB;AAEE,gBAAA,OAAO,EAAE,MAAM;AACb/B,kBAAAA,kBAAkB,CAAC8B,IAAD,CAAlB;AACAhC,kBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,iBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAqBD,aAlCA;AADH;AAAA;AAAA;AAAA;AAAA,kBADD,GAuCC,WApDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CA/GD;;AAiHA,MAAMkC,YAAY,GAAG,CACnB;AACEC,EAAAA,MAAM,EAAE,EADV;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEZ,EAAAA,IAAI,EAAE,wCAJR;AAKEa,EAAAA,IAAI,EAAE;AALR,CADmB,EAQnB;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEZ,EAAAA,IAAI,EAAE,wCAJR;AAKEa,EAAAA,IAAI,EAAE;AALR,CARmB,CAArB;AAiBA,eAAe5C,SAAf","sourcesContent":["import { ReactComponent as ArrowDown } from \"assets/images/icons/Arrows/Big/Down.svg\";\nimport { ReactComponent as ArrowUp } from \"assets/images/icons/Arrows/Big/up.svg\";\nimport { ReactComponent as SendSvg } from \"assets/images/icons/Commiunication/Send.svg\";\nimport { ReactComponent as SearchSvg } from \"assets/images/icons/UI/Search.svg\";\nimport GolTextField from \"components/GolTextField\";\nimport React, { useState, useEffect } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport MessangerMessages from \"./Messanger.message\";\nimport PrivateChat from \"./PrivateChat\";\nimport { useMessangerStyle } from \"./useMessangerStyle\";\nimport { socket } from \"utils/socket\";\nimport axios from \"axios\";\nimport { api } from \"domains/api\";\n\nconst Messanger = ({ openChat, setOpenChat }) => {\n  const styles = useMessangerStyle();\n  const { formatMessage } = useIntl();\n  const [privateMessage, setPrivate] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${api}/api/order`, {\n        headers: {\n          \"x-auth-token\": localStorage?.token,\n        },\n      })\n      .then((res) => setOrders(res?.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      {privateMessage && (\n        <PrivateChat\n          {...{\n            selectedContact,\n            setPrivate,\n            messages,\n            setMessages,\n            socket,\n          }}\n        />\n      )}\n      <div\n        className={styles.root}\n        style={openChat ? { bottom: 0 } : { bottom: -372 }}\n      >\n        <div className={styles.header} onClick={() => setOpenChat(!openChat)}>\n          <div>{formatMessage(MessangerMessages.messaging)}</div>\n          <div className={styles.spaceBetween}>\n            <div>\n              <SendSvg className={styles.sendSvg} />\n            </div>\n            <div\n              className={styles.toggle}\n              onClick={() => setOpenChat(!openChat)}\n            >\n              {openChat ? <ArrowDown /> : <ArrowUp />}\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.body}>\n          <div className={styles.search}>\n            <div className={styles.messageSearch}>\n              <GolTextField\n                className={styles.searchInput}\n                label={\n                  <span className={styles.textFieldLabel}>\n                    <SearchSvg />\n                    <span>Search</span>\n                  </span>\n                }\n              />\n            </div>\n\n            {orders?.length ? (\n              <div className={styles.messages}>\n                {orders?.map((item: any) => {\n                  // let {\n                  //   customer: {\n                  //     avatar,\n                  //     firstName,\n                  //     lastName,\n                  //     email,\n                  //     countryCode,\n                  //     phoneNumber,\n                  //   },\n                  //   status,\n                  //   createdAt: date,\n                  // } = item;\n                  return (\n                    <div\n                      className={styles.message}\n                      onClick={() => {\n                        setSelectedContact(item);\n                        setPrivate(true);\n                      }}\n                    >\n                      asd\n                      {/* <div className={styles.avatar}></div>\n                      <div className={styles.content}>\n                        <div\n                          className={styles.name}\n                        >{`${firstName} ${lastName}`}</div>\n                        <div className={styles.text}>\n                          order status: {status}\n                        </div>\n                      </div>\n                      <div className={styles.date}>{date}</div> */}\n                    </div>\n                  );\n                })}\n              </div>\n            ) : (\n              \"No Orders\"\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst messagesList = [\n  {\n    avatar: \"\",\n    firstName: \"Order\",\n    lastName: \"1\",\n    body: \"Order1: its my honor to see you around\",\n    date: \"29 julay\",\n  },\n  {\n    avatar: \"\",\n    firstName: \"Order\",\n    lastName: \"2\",\n    body: \"Order2: its my honor to see you around\",\n    date: \"29 julay\",\n  },\n];\n\nexport default Messanger;\n"]},"metadata":{},"sourceType":"module"}